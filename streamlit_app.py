import streamlit as st

# session_state 초기화
# 'page' 키가 session_state에 없으면 'home'으로 설정 (페이지 이동 관리)
if 'page' not in st.session_state:
    st.session_state.page = 'home'

# 각 MBTI 지표에 대한 질문과 선택지 정의
questions = {
    'EI': {
        'question': '1. 여러 사람과 함께 있을 때 에너지가 넘치나요, 아니면 혼자 있을 때 충전되나요?',
        'options': {
            '여러 사람과 함께할 때 에너지가 넘쳐요. (E)': 'E',
            '혼자 있을 때 에너지가 충전돼요. (I)': 'I'
        }
    },
    'SN': {
        'question': '2. 새로운 것을 배울 때, 실제 경험과 사실에 집중하나요, 아니면 이론과 가능성에 더 흥미를 느끼나요?',
        'options': {
            '실제 경험과 사실이 중요해요. (S)': 'S',
            '이론과 가능성이 더 흥미로워요. (N)': 'N'
        }
    },
    'TF': {
        'question': '3. 결정을 내릴 때, 객관적인 사실과 논리를 중시하나요, 아니면 사람들과의 관계와 감정을 더 고려하나요?',
        'options': {
            '객관적인 사실과 논리가 우선이에요. (T)': 'T',
            '사람들과의 관계와 감정이 더 중요해요. (F)': 'F'
        }
    },
    'JP': {
        'question': '4. 과제를 할 때, 미리 계획을 세우고 차근차근 진행하는 편인가요, 아니면 마감 직전에 유연하게 처리하는 편인가요?',
        'options': {
            '계획을 세워서 차근차근 진행해요. (J)': 'J',
            '상황에 맞춰 유연하게 처리해요. (P)': 'P'
        }
    },
    'EI_2': {
        'question': '5. 주말에 약속이 없다면, 주로 무엇을 하며 시간을 보내나요?',
        'options': {
            '친구들을 만나거나 새로운 활동을 찾아봐요. (E)': 'E',
            '집에서 책을 읽거나 영화를 보며 조용히 보내요. (I)': 'I'
        }
    },
    'SN_2': {
        'question': '6. 길을 찾을 때, 상세한 지도를 보거나 길 이름을 확인하나요, 아니면 큰 건물이나 방향 감각에 의존하나요?',
        'options': {
            '지도나 표지판의 세부 정보를 확인해요. (S)': 'S',
            '전체적인 방향과 감을 믿고 가요. (N)': 'N'
        }
    }
}

# MBTI 유형별 학습 스타일 설명 데이터
learning_styles = {
    'ISTJ': '**소금형 🧂:** 세상의 빛과 소금! 계획적이고 체계적인 학습을 선호해요. 조용한 환경에서 사실에 기반한 내용을 순서대로 공부할 때 효율이 가장 높습니다. 꼼꼼한 노트 필기가 큰 도움이 됩니다.',
    'ISFJ': '**권력형 💪:** 용감한 수호자! 조용하고 차분한 환경에서 학습하는 것을 선호하며, 다른 사람을 돕는 과정에서 더 잘 배웁니다. 실제 사례를 통해 개념을 이해하는 것이 효과적입니다.',
    'INFJ': '**예언자형 🔮:** 선의의 옹호자! 학습 내용이 자신에게 어떤 의미가 있는지 파악하는 것을 중요하게 생각해요. 깊이 있는 토론이나 독서를 통해 영감을 얻으며 공부하는 스타일입니다.',
    'INTJ': '**과학자형 🔬:** 용의주도한 전략가! 독립적인 학습을 선호하며, 복잡한 이론이나 시스템을 논리적으로 분석하고 이해하는 데 뛰어납니다. 장기적인 계획을 세워 공부하는 것이 좋습니다.',
    'ISTP': '**백과사전형 📖:** 만능 재주꾼! 직접 손으로 만지고 경험하며 배우는 것을 가장 좋아해요. 실습 위주의 수업이나 문제 해결 중심의 학습 방식이 잘 맞습니다.',
    'ISFP': '**성인군자형 😇:** 호기심 많은 예술가! 편안하고 자유로운 분위기에서 학습할 때 능률이 올라요. 시각 자료나 체험 활동을 통해 흥미를 느끼고, 감성적으로 접근할 때 더 잘 배웁니다.',
    'INFP': '**잔다르크형 🔥:** 열정적인 중재자! 자신이 가치 있다고 생각하는 주제에 대해 깊이 파고드는 것을 좋아해요. 상상력을 자극하는 이야기나 비유를 통해 학습할 때 효과적입니다.',
    'INTP': '**아이디어형 💡:** 논리적인 사색가! 지적 호기심이 강해 흥미 있는 분야는 밤을 새워서라도 파고듭니다. 자유로운 토론과 논리적 분석을 통해 개념을 완성해나가는 것을 즐깁니다.',
    'ESTP': '**활동가형 🏃:** 모험을 즐기는 사업가! 역동적이고 활동적인 환경에서 직접 부딪히며 배우는 것을 선호해요. 경쟁이나 게임 요소를 활용한 학습이 효과적일 수 있습니다.',
    'ESFP': '**사교형 🎉:** 자유로운 영혼의 연예인! 다른 사람들과 함께 어울리며 즐겁게 공부하는 것을 좋아해요. 그룹 스터디나 발표, 역할극 등을 통해 학습 효과를 높일 수 있습니다.',
    'ENFP': '**스파크형 ✨:** 재기발랄한 활동가! 창의적이고 새로운 아이디어를 탐구하는 것을 즐깁니다. 딱딱한 계획보다는 브레인스토밍이나 자유로운 토론 속에서 더 많은 것을 배웁니다.',
    'ENTP': '**발명가형 🚀:** 뜨거운 논쟁을 즐기는 변론가! 지적인 도전을 즐기며, 기존의 방식에 의문을 제기하고 토론하는 것을 좋아해요. 복잡한 문제를 해결하며 자신만의 논리를 만들어갈 때 희열을 느낍니다.',
    'ESTJ': '**사업가형 🏢:** 엄격한 관리자! 목표가 명확하고 체계적인 학습 환경을 선호합니다. 정해진 계획에 따라 효율적으로 공부하고, 실질적인 결과를 얻는 것을 중요하게 생각합니다.',
    'ESFJ': '**친선도모형 🤝:** 사교적인 외교관! 다른 사람들과 교류하고 협력하며 공부할 때 가장 효율적입니다. 스터디 그룹의 리더 역할을 맡거나, 친구를 가르쳐주면서 더 깊이 이해하게 됩니다.',
    'ENFJ': '**언변능숙형 🎤:** 정의로운 사회운동가! 다른 사람들에게 긍정적인 영향을 주는 학습을 선호해요. 열정적인 토론이나 발표를 통해 자신의 신념을 공유하며 성장하는 스타일입니다.',
    'ENTJ': '**지도자형 👑:** 대담한 통솔자! 목표 지향적이며, 학습 내용을 전략적으로 파악하고 이끌어나가는 능력이 탁월합니다. 팀 프로젝트를 이끌거나 리더십을 발휘할 수 있는 학습 환경에서 뛰어난 성과를 보입니다.'
}

def home_page():
    """메인 페이지(질문 페이지)를 렌더링하는 함수"""
    st.title("🚀 MBTI 학습 유형 진단")
    st.markdown("---")
    st.subheader("아래 질문에 답변해주세요!")

    # 사용자의 답변을 저장할 딕셔너리
    answers = {}
    for key, value in questions.items():
        # 라디오 버튼으로 질문 표시, 선택된 옵션의 value를 저장
        answers[key] = st.radio(value['question'], list(value['options'].keys()))

    # '제출' 버튼을 누르면 결과 페이지로 이동
    if st.button("결과 확인하기", type="primary"):
        st.session_state.answers = answers  # 답변을 세션 상태에 저장
        st.session_state.page = 'result'  # 페이지 상태를 'result'로 변경
        st.rerun() # 페이지를 새로고침하여 변경된 상태를 즉시 반영

def result_page():
    """결과 페이지를 렌더링하는 함수"""
    st.title("🔍 진단 결과")
    st.markdown("---")

    answers = st.session_state.get('answers', {})
    if not answers:
        st.error("진단 정보가 없습니다. 홈으로 돌아가 다시 시도해주세요.")
        if st.button("홈으로 돌아가기"):
            st.session_state.page = 'home'
            st.rerun()
        return

    # 각 지표별 점수 계산
    scores = {'E': 0, 'I': 0, 'S': 0, 'N': 0, 'T': 0, 'F': 0, 'J': 0, 'P': 0}
    for key, answer in answers.items():
        # 선택된 옵션에 해당하는 MBTI 코드 (E, I, S, N 등)
        mbti_char = questions[key]['options'][answer]
        scores[mbti_char] += 1

    # 최종 MBTI 유형 결정
    mbti_type = ""
    mbti_type += 'E' if scores['E'] > scores['I'] else 'I'
    mbti_type += 'S' if scores['S'] > scores['N'] else 'N'
    mbti_type += 'T' if scores['T'] > scores['F'] else 'F'
    mbti_type += 'J' if scores.get('J', 0) > scores.get('P', 0) else 'P'

    # 결과 출력
    st.subheader(f"당신의 학습 유형은: **{mbti_type}** 입니다!")
    st.markdown(f"> {learning_styles.get(mbti_type, '결과를 찾을 수 없습니다.')}")
    st.markdown("---")

    # 홈으로 돌아가기 버튼
    if st.button("다시 진단하기"):
        st.session_state.page = 'home'
        # 세션 상태 초기화를 위해 관련 키 삭제
        if 'answers' in st.session_state:
            del st.session_state['answers']
        st.rerun()

# st.session_state.page 값에 따라 적절한 페이지 함수 호출
if st.session_state.page == 'home':
    home_page()
elif st.session_state.page == 'result':
    result_page()
